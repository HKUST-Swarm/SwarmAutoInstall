%YAML:1.0

#common parameters
imu: 1
num_of_cam: 2  # 1 or 2
GPS: 0

imu_topic: "/dji_sdk_1/dji_sdk/imu"
image0_topic: "/stereo/left/image"
image1_topic: "/stereo/right/image" 
output_path: "/home/dji/swarm_log_lastest/"

cam0_calib:  "left.yaml"
cam1_calib:  "right.yaml"
image_width: 640
image_height: 512
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0, 0, 1, 0.057,
#         0, -1, 0, 0.061,
#         1, 0, 0, 0.12,
#         0, 0, 0, 1.0 ]

# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0., 0., 1., 0.057,
#            0., -1., 0., -0.054,
#            1., 0., 0., 0.12,
#             0., 0., 0., 1. ]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -2.5746614843593640e-02, -1.5714926359881774e-02,
       9.9954497293198341e-01, 4.6611261043967775e-02,
       1.2785413587476278e-02, -9.9979982663681954e-01,
       -1.5389602216541919e-02, 6.9657130345409310e-02,
       9.9958673711864199e-01, 1.2383365717352770e-02,
       2.5942382890117410e-02, 7.0619612724196257e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -4.1815542934567462e-02, -2.7920130190612364e-02,
       9.9873516344385616e-01, 4.4897672272219108e-02,
       1.7380701121347385e-02, -9.9947854031547823e-01,
       -2.7213207774361724e-02, -6.3777380167414022e-02,
       9.9897415962457070e-01, 1.6220782317121561e-02,
       4.2279009252853328e-02, 7.2802495655711924e-02, 0., 0., 0., 1. ]
#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 40            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.02  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 1.0e-4       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805       # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/dji/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                          # online estimate time offset between camera and imu
#td: -0.002375                              # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
td: -0.029                              # -0.029 for USB2.0, -0.002375 for usb 3.0

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
