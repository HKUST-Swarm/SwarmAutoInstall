%YAML:1.0

#common parameters
imu: 1
num_of_cam: 2  # 1 or 2
GPS: 0

imu_topic: "/dji_sdk_1/dji_sdk/imu"
image0_topic: "/stereo/left/image"
image1_topic: "/stereo/right/image" 
output_path: "/home/dji/output/"

cam0_calib:  "left.yaml"
cam1_calib:  "right.yaml"
image_width: 640
image_height: 512
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.

#body_T_cam0: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 0., 0., 1., 0.05,
#        0., 1., 0., 0.05,
#        -1., 0., 0., 0.07,
#        0., 0., 0., 1. ]
#
#body_T_cam1: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 0., 0., 1., 0.05,
#           0., 1., 0., -0.05,
#           -1., 0., 0., 0.07,
#            0., 0., 0., 1. ]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -1.5288386160720258e-02, -3.1592635324270507e-02,
       9.9938389552857454e-01, 8.0224364315242172e-02,
       -2.1709989949048897e-03, 9.9949940422351569e-01,
       3.1563075265273403e-02, 7.8071937859580956e-02,
       -9.9988076889795474e-01, -1.6871129496412963e-03,
       -1.5349320438714287e-02, 5.6889174707362315e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -8.4300912320607324e-03, -1.9171021737968176e-02,
       9.9978067869275300e-01, 7.7317143289999238e-02,
       -1.4898694238773961e-02, 9.9970763482063452e-01,
       1.9043996201229763e-02, -5.8584745736782441e-02,
       -9.9985347050045237e-01, -1.4734884012277859e-02,

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 40            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.02  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 1.0e-4       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805       # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/tony-ws1/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                          # online estimate time offset between camera and imu
td: -0.029                              # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ